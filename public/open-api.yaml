openapi: '3.0.0'
info:
  title: 'Alun Delivery API(s)'
  version: '1.0.0'
  description: >-
    Alun Delivery Courier API Documentation. 

paths:
  "/api/health":
    get:
      tags:
      - Monitor Health

      operationId: monitorHealth
      summary: Get health status of app
      description: Get health status of app
      responses:
        default:
          description: Health check response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Server is up!"

  "/api/user/add":
    post:
      summary: Create new user
      tags:
      - User Enrollment
      description: Register user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/userAddSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "User enrolled successfully"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"

  "/api/token":
    post:
      summary: Create access token 
      tags:
      - Access Token
      description: Get access token
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/accessTokenSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
  
  "/api/fees/distance":
    post:
      summary: Get delivery fee according to location distances 
      tags:
      - Delivery Fee
      description: For food delivery
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/deliveryFeeSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: {
                        "deliveryFee": 150
                      }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
          
  "/api/fees/distance/courier":
    post:
      summary: Get delivery fee of courier according to location distances 
      tags:
      - Delivery Fee
      description: For courier services
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/deliveryFeeCourierSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: {
                        "deliveryFee": 200
                      }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/fees/parcel":
    post:
      summary: Get delivery fee according to parcel 
      tags:
      - Delivery Fee
      description: For pool delivery
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/deliveryFeeParcelSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: {
                        "deliveryFee": 89
                      }
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/merchant/add":
    post:
      summary: Add merchant 
      tags:
      - Merchant
      description: Add merchant
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addMerchantSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "Merchant Added Successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/merchant/contact/add":
    post:
      summary: Add merchant contact
      tags:
      - Merchant
      description: Add merchant contact
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/addMerchantContactSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "Merchant Contact Added Successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/merchant/contact":
    post:
      summary: Get merchant contact list 
      tags:
      - Merchant
      description: Get merchant contact list 
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/merchantContactSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: [
                          {
                              "name": "Ronnie Mesa",
                              "email": "ronnie@alun.app"
                          },
                          {
                              "name": "Achi Maglanque",
                              "email": "achimags@alun.app"
                          }
                      ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/pool/delivery":
    post:
      summary: Create delivery booking 
      tags:
      - Pool
      description: Create delivery booking 
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/createPoolDeliverySource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Delivery booking successful"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    get:
      summary: Get delivery bookings 
      tags:
      - Pool
      description: Booking Transaction History 
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: object
                      example: [
                        {
                          "deliveryId": 18,
                          "trackingNumber": "CSR14NBKAJKN",
                          "senderName": "Mr. Fu",
                          "senderAddress": "H&M Rob Naga",
                          "receiverName": "Ms. Tabag",
                          "receiverAddress": "Santo Domingo, Iriga",
                          "nearestLandmark": "malapit sa simbahan",
                          "receiverNumber": "09123456789",
                          "deliveryDate": "2020-11-24",
                          "createdAt": "2020-12-06T08:22:27.000Z",
                          "delivery_status_histories": [
                            {
                              "statusHIstoryId": 2,
                              "status": "Pending",
                              "createdAt": "2020-12-06T08:22:27.000Z"
                            }
                          ]
                        },
                        {
                          "deliveryId": 17,
                          "trackingNumber": "CSCPPG29KKN1",
                          "senderName": "Mr. Fu",
                          "senderAddress": "H&M Rob Naga",
                          "receiverName": "Ms. Tabag",
                          "receiverAddress": "Santo Domingo, Iriga",
                          "nearestLandmark": "malapit sa simbahan",
                          "receiverNumber": "09123456789",
                          "deliveryDate": "2020-11-24",
                          "createdAt": "2020-12-06T08:19:16.000Z",
                          "delivery_status_histories": [
                            {
                              "statusHIstoryId": 4,
                              "status": "Cancelled",
                              "createdAt": "2020-12-06T08:38:59.000Z"
                            },
                            {
                              "statusHIstoryId": 3,
                              "status": "For Pick-up",
                              "createdAt": "2020-12-06T08:35:18.000Z"
                            },
                            {
                              "statusHIstoryId": 1,
                              "status": "Pending",
                              "createdAt": "2020-12-06T08:19:16.000Z"
                            }
                          ]
                        }
                      ]
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/pool/delivery/:deliveryId/status":
    post:
      summary: Add delivery status
      tags:
      - Pool
      description: Update status of delivery booking
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: deliveryId
            in: path
            description: Delivery ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "For Pick-up"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Delivery booking status updated successfully"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    
definitions:
  userAddSource:
    properties:
        userType:
          type: string
          example: "internal/external"
        organization:
          type: string
          example: "Prosperna //only required if userType=external"
        username:
          type: string
          example: "username"
        password:
          type: string
          example: "password"

  accessTokenSource:
    properties:
        username:
          type: string
          example: "username"
        password:
          type: string
          example: "password"

  deliveryFeeSource:
    properties:
        deliverFrom:
          type: object
          example: {
            "city": "Nabua",
            "barangay": "San Nicolas (Poblacion)"
          }
        deliverTo:
          type: object
          example: {
            "city": "Baao",
            "barangay": "Santa Isabel"
          }

  deliveryFeeCourierSource:
    properties:
        perishable:
          type: boolean
          example: false
        vehicleType:
          type: string
          example: "motorcycle/tricycle/multicab/private"
        deliverFrom:
          type: object
          example: {
            "city": "Nabua",
            "barangay": "San Nicolas (Poblacion)"
          }
        deliverTo:
          type: object
          example: {
            "city": "Baao",
            "barangay": "Santa Isabel"
          }

  deliveryFeeParcelSource:
    properties:
        packaging:
          type: string
          example: "own"
        weight:
          type: integer
          example: 5.01
        express:
          type: boolean
          example: true

  addMerchantSource:
    properties:
        merchantName:
          type: string
          example: "Shawarma Shack"

  addMerchantContactSource:
    properties:
        merchantName:
          type: string
          example: "Desny Grill"
        merchantContact:
          type: object
          example: [
              {
                  "name": "Achi Maglanque",
                  "email": "msg@email.com"
              },
              {
                  "name": "Ronnie Tibak",
                  "email": "neil@email.com"
              }
          ]

  merchantContactSource:
    properties:
        merchantName:
          type: string
          example: "Desny Grill"
  
  createPoolDeliverySource:
    properties:
        senderName:
          type: string
          example: "Mr. Fu"
        senderAddress:
          type: string
          example: "H&M Rob Naga"
        receiverName:
          type: string
          example: "Ms. Tabag"
        receiverAddress:
          type: string
          example: "Santo Domingo, Iriga"
        nearestLandmark:
          type: string
          example: "malapit sa simbahan"
        receiverNumber:
          type: string
          example: "09123456789"
        deliveryDate:
          type: string
          example: "2020-11-24"
  
  ErrorResponse:
    type: object
    properties:
      success:
        type: boolean
        example: false
      message:
        type: string
        example: "Error message"
              
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
